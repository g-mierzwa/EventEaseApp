@page "/eventregistration"
@inject EventService EventService

<h3>Event Registration</h3>

@if (isRegistered)
{
    <p>Event successfully registered!</p>
    <a href="/events">Return to Events List</a>
}
else
{
    <EditForm Model="newEvent" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="eventName">Event Name:</label>
            <InputText id="eventName" @bind-Value="newEvent.Name" />
            <ValidationMessage For="@(() => newEvent.Name)" />
        </div>

        <div>
            <label for="eventDate">Event Date:</label>
            <InputDate id="eventDate" @bind-Value="newEvent.Date" />
            <ValidationMessage For="@(() => newEvent.Date)" />
        </div>

        <div>
            <label for="eventLocation">Event Location:</label>
            <InputText id="eventLocation" @bind-Value="newEvent.Location" />
            <ValidationMessage For="@(() => newEvent.Location)" />
        </div>

        <button type="submit">Register</button>
    </EditForm>
}

@code {
    private Event newEvent = new Event { Date = DateTime.Now.AddDays(1) };
    private bool isRegistered = false;

    private void HandleValidSubmit()
    {
        EventService.AddEvent(newEvent);
        isRegistered = true;
        newEvent = new Event { Date = DateTime.Now.AddDays(1) }; // Reset the form with default date
    }
}